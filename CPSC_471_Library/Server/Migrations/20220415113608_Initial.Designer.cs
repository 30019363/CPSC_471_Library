// <auto-generated />
using System;
using CPSC_471_Library.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CPSC_471_Library.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220415113608_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CPSC_471_Library.Shared.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Copies")
                        .HasColumnType("int");

                    b.Property<string>("Distribution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("CPSC_471_Library.Shared.ContactForm", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContactLibraryId")
                        .HasColumnType("int");

                    b.Property<string>("ContactMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("ContactLibraryId");

                    b.ToTable("ContactForms");
                });

            modelBuilder.Entity("CPSC_471_Library.Shared.Library", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LibraryAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LibraryBranch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LibraryPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Libraries");

                    b.HasData(
                        new
                        {
                            Id = 10101,
                            LibraryAddress = "124 Conch St. \n Kanto OC Y7U 6R3",
                            LibraryBranch = "Kanto",
                            LibraryPhone = "(555)-0101"
                        },
                        new
                        {
                            Id = 100100,
                            LibraryAddress = "308 Negra Arroyo Lane \n Emerald City ZZ R4V 2A5",
                            LibraryBranch = "Emerald",
                            LibraryPhone = "(555)-0188"
                        },
                        new
                        {
                            Id = 129129,
                            LibraryAddress = "1640 Riverside Drive \n Bedrock TA U0F 0O1",
                            LibraryBranch = "Bedrock",
                            LibraryPhone = "(555)-0123"
                        },
                        new
                        {
                            Id = 727272,
                            LibraryAddress = "31 Spooner Street \n Gravity Falls OR E4B 3C2",
                            LibraryBranch = "Gravity Falls",
                            LibraryPhone = "(555)-0145"
                        },
                        new
                        {
                            Id = 101010,
                            LibraryAddress = "221B Baker St. \n Gotham NJ H9X 2D3",
                            LibraryBranch = "Gotham",
                            LibraryPhone = "(555)-0100"
                        },
                        new
                        {
                            Id = 777777,
                            LibraryAddress = "742 Evergreen Terrace \n Zion AA T9P 1A7",
                            LibraryBranch = "Zion",
                            LibraryPhone = "(555)-0122"
                        });
                });

            modelBuilder.Entity("CPSC_471_Library.Shared.LibraryEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventDuration")
                        .HasColumnType("int");

                    b.Property<int>("EventLibraryId")
                        .HasColumnType("int");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LibraryEvents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventDate = new DateTime(2022, 4, 12, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            EventDuration = 1,
                            EventLibraryId = 10101,
                            EventName = "Kids Reading Day"
                        },
                        new
                        {
                            Id = 2,
                            EventDate = new DateTime(2022, 4, 4, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            EventDuration = 9,
                            EventLibraryId = 101010,
                            EventName = "Book Fair"
                        },
                        new
                        {
                            Id = 3,
                            EventDate = new DateTime(2022, 4, 20, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            EventDuration = 2,
                            EventLibraryId = 100100,
                            EventName = "Tutoring Day"
                        },
                        new
                        {
                            Id = 4,
                            EventDate = new DateTime(2022, 4, 20, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            EventDuration = 2,
                            EventLibraryId = 129129,
                            EventName = "Tutoring Day"
                        });
                });

            modelBuilder.Entity("CPSC_471_Library.Shared.ContactForm", b =>
                {
                    b.HasOne("CPSC_471_Library.Shared.Library", "ContactLibrary")
                        .WithMany()
                        .HasForeignKey("ContactLibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContactLibrary");
                });
#pragma warning restore 612, 618
        }
    }
}
